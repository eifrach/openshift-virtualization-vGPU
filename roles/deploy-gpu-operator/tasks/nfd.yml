---
- name: "Using Namespace {{ NFD_NAMESPACE | default('openshift-nfd') }}"
  set_fact:
    NFD_NS: "{{ NFD_NAMESPACE | default('openshift-nfd') }}"

- name: "Create namespace {{ NFD_NS }}"
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    apply: True
    state: present
    api_version: v1
    kind: Namespace
    name:  "{{ NFD_NS }}"

- name: Create NFD OperatorGroup
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    apply: True
    state: present
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        generateName: openshift-nfd-
        name: openshift-nfd
        namespace: "{{ NFD_NS }}"
      spec:
        targetNamespaces:
          - "{{ NFD_NS }}"

- name: Create NFD Subscription
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    apply: True
    wait: True
    definition:     
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: nfd
        namespace: "{{ NFD_NS }}"
      spec:
        channel: "{{ NFD_CHANNEL | default('stable') }}"
        installPlanApproval: Automatic
        name: nfd
        source: redhat-operators
        sourceNamespace: openshift-marketplace
  register: resp_subscription

- name: Get NFD operator version
  kubernetes.core.k8s_info:
    kubeconfig: "{{ KUBECONFIG }}"
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: nfd
    namespace:  openshift-marketplace
  register: NFD_PACKAGE

- name: Waiting for API 
  kubernetes.core.k8s_info:
    kubeconfig: "{{ KUBECONFIG }}"
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: "{{ NFD_NS }}"
    name: "{{ NFD_PACKAGE.resources[0].status.channels[0].currentCSV }}"
  register: resp
  until:  resp.resources[0].status.phase is defined 
  retries: 6
  delay: 10
  when: resp_subscription.changed

- name: "Wait for installation to complete {{ NFD_PACKAGE.resources[0].status.channels[0].currentCSV }} [ max 1 min ]"
  kubernetes.core.k8s_info:
    kubeconfig: "{{ KUBECONFIG }}"
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: "{{ NFD_NS }}"
    name: "{{ NFD_PACKAGE.resources[0].status.channels[0].currentCSV }}"
  register: resp
  until: resp.resources[0].status.phase == "Succeeded"
  retries: 6
  delay: 10

- name: "wait for NFD pods to be ready [ max 2 min ]"
  kubernetes.core.k8s_info:
    kubeconfig: "{{ KUBECONFIG }}"
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ NFD_NS }}"
    name: nfd-controller-manager
  register: resp
  until: resp.resources[0].status.availableReplicas == resp.resources[0].status.replicas
  retries: 20
  delay: 6

- name: Create NFD instance
  kubernetes.core.k8s:
    kubeconfig: "{{ KUBECONFIG }}"
    state: present
    apply: True
    wait: True
    definition:
      apiVersion: nfd.openshift.io/v1
      kind: NodeFeatureDiscovery
      metadata:
        name: nfd-instance
        namespace: openshift-nfd
      spec:
        customConfig:
          configData: ""
        operand:
          namespace: openshift-nfd
          servicePort: 12000
        workerConfig:
          configData: |
            core:
              sleepInterval: 60s
            sources:
              pci:
                deviceClassWhitelist:
                  - "0200"
                  - "03"
                  - "12"
                  - "0302"
                deviceLabelFields:
